if (isBuildAsLibrary.toBoolean()) {
    apply plugin: 'com.android.library'
} else {
    apply plugin: 'com.android.application'
}
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion rootProject.ext.android.compileSdk

    // 默认配置
    defaultConfig {
        if (!isBuildAsLibrary.toBoolean()) {
            applicationId rootProject.ext.android.applicationId
        }
        minSdkVersion rootProject.ext.android.minSdk
        targetSdkVersion rootProject.ext.android.targetSdk
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        // ARouter 路由
        kapt {
            arguments {
                arg("AROUTER_MODULE_NAME", project.getName())
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }

    sourceSets {
        main {
            if (isBuildAsLibrary.toBoolean()) { // 作为主工程的依赖
                manifest.srcFile 'src/main/AndroidManifest.xml'
                // 移除debug资源
                java {
                    exclude 'debug/**'
                }
            } else { // 作为一个独立的应用
                manifest.srcFile 'src/main/debug/AndroidManifest.xml'
            }
        }
    }

    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }

    configurations.all {
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:1.3.9'
        resolutionStrategy.force "com.android.support:support-v4:${rootProject.ext.dependVersion.androidSupportV7}"
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    // test
    testImplementation rootProject.ext.dependencies["junitSupport"]
    androidTestImplementation rootProject.ext.dependencies["supportTestRunner"]
    androidTestImplementation rootProject.ext.dependencies["supportTestEspresso"]

    // ARouter 路由 https://github.com/alibaba/ARouter
    kapt rootProject.ext.dependencies["arouterCompiler"]

    implementation project(":app_lib_common")
}
